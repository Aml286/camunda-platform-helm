# ({{ .Chart.Name }} - {{ .Chart.Version }})
   ___   _   __  __ _   _ _  _ ___   _     ___ _      _ _____ ___ ___  ___ __  __ 
  / __| /_\ |  \/  | | | | \| |   \ /_\   | _ \ |    /_\_   _| __/ _ \| _ \  \/  |
 | (__ / _ \| |\/| | |_| | .` | |) / _ \  |  _/ |__ / _ \| | | _| (_) |   / |\/| |
  \___/_/ \_\_|  |_|\___/|_|\_|___/_/ \_\ |_| |____/_/ \_\_| |_| \___/|_|_\_|  |_|
                                                                                 

## Installed Services:

- Zeebe:
  - Docker Image used for Zeebe: {{ .Values.zeebe.image.repository }}:{{ .Values.global.image.tag }}
  - Zeebe Cluster Name: {{ tpl .Values.global.zeebeClusterName . | quote }}
  - Prometheus ServiceMonitor Enabled: {{ .Values.prometheusServiceMonitor.enabled }}
- Operate:
  - Enabled: {{ .Values.operate.enabled }}
  {{- if .Values.operate.enabled }}
  - Docker Image used for Operate: {{ .Values.operate.image.repository }}:{{ .Values.global.image.tag }}
  {{- end }}
- Tasklist:
  - Enabled: {{ .Values.tasklist.enabled }}
  {{- if .Values.tasklist.enabled }}
  - Docker Image used for Tasklist: {{ .Values.tasklist.image.repository }}:{{ .Values.global.image.tag }}
  {{- end }}
- Identity:
  - Enabled: {{ .Values.identity.enabled }}
  {{- if .Values.identity.enabled }}
    {{- if .Values.identity.image.tag }}
  - Docker Image used for Identity: {{ .Values.identity.image.repository }}:{{ .Values.identity.image.tag }}
    {{- else }}
  - Docker Image used for Identity: {{ .Values.identity.image.repository }}:{{ .Values.global.image.tag }}
    {{- end }}
  - Keycloak: {{ .Values.identity.keycloak.image.repository }}:{{ .Values.identity.keycloak.image.tag }}
  {{- end }}
- Elasticsearch:
  - Enabled: {{ .Values.elasticsearch.enabled }}
  - ElasticSearch URL: http://{{ .Values.global.elasticsearch.host }}:{{ .Values.global.elasticsearch.port }}

### Zeebe

The Cluster itself is not exposed as a service that means that you can use `kubectl port-forward` to access the Zeebe cluster from outside Kubernetes:

> kubectl port-forward svc/{{ tpl .Values.global.zeebeClusterName . }}-gateway 26500:26500 -n {{ .Release.Namespace }}

Now you can connect your workers and clients to `localhost:26500`
{{- if .Values.operate.enabled }}

### Operate

As part of the Operate HELM Chart an ingress definition can be deployed, but you require to have an Ingress Controller for that Ingress to be Exposed.
In order to deploy the ingress manifest, set `operate.ingress.enabled` to `true`.
If you don't have an Ingress Controller you can use kubectl port-forward to access Operate from outside the cluster:

> kubectl port-forward svc/{{ .Release.Name }}-operate 8080:80

    {{- if .Values.global.operate.auth.identity.enabled }}

Authentication via Identity/Keycloak is enabled. In order to login into Operate please port-forward to Keycloak
as well, otherwise a login will not be possible. Make sure you use `18080` as port.

> kubectl port-forward svc/{{ include "common.names.dependency.fullname" (dict "chartName" "keycloak" "chartValues" .Values.identity.keycloak "context" $) | trunc 20 | trimSuffix "-" }} 18080:80
    {{- end }}

Now you can point your browser to `http://localhost:8080`

Default user and password: "demo/demo"
{{- end }}
{{- if .Values.tasklist.enabled }}

### Tasklist

As part of Tasklist an ingress definition can be deployed, but you require to have an Ingress Contoller for that Ingress to be Exposed.
In order to deploy the ingress manifest, set `tasklist.ingress.enabled` to `true`.
If you don't have an Ingress Controller you can use kubectl port-forward to access tasklist from outside the cluster:

> kubectl port-forward svc/{{ .Release.Name }}-tasklist 8081:80

    {{- if .Values.global.tasklist.auth.identity.enabled }}

Per default authentication via Identity/Keycloak is enabled. In order to login into Tasklist please port-forward to Keycloak
as well, otherwise a login will not be possible. Make sure you use `18080` as port.

> kubectl port-forward svc/{{ include "common.names.dependency.fullname" (dict "chartName" "keycloak" "chartValues" .Values.identity.keycloak "context" $) | trunc 20 | trimSuffix "-" }} 18080:80
    {{- end }}

Now you can point your browser to `http://localhost:8080`

Default user and password: "demo/demo"
{{- end }}

{{- if .Values.identity.enabled }}

### Identity

As part of Identity an ingress definition can be deployed, but you require to have an Ingress Contoller for that Ingress to be Exposed.
In order to deploy the ingress manifest, set `identity.ingress.enabled` to `true`.

If you don't have an ingress controller you can use kubectl port-forward to access Identity from outside the cluster:

> kubectl port-forward svc/{{ .Release.Name }}-identity 8080:80
> kubectl port-forward svc/{{ include "common.names.dependency.fullname" (dict "chartName" "keycloak" "chartValues" .Values.identity.keycloak "context" $) | trunc 20 | trimSuffix "-" }} 18080:80

Now you can point your browser to `http://localhost:8080`. Identity will forward requests to keycloak (listening under `18080`).

Default user and password: "demo/demo"
{{- end }}
